[{"/Users/atusanaseri/code/project4/src/index.js":"1","/Users/atusanaseri/code/project4/src/serviceWorker.js":"2","/Users/atusanaseri/code/project4/src/pages/App/App.jsx":"3","/Users/atusanaseri/code/project4/src/utils/userService.js":"4","/Users/atusanaseri/code/project4/src/pages/SignupPage/SignupPage.jsx":"5","/Users/atusanaseri/code/project4/src/pages/LoginPage/LoginPage.jsx":"6","/Users/atusanaseri/code/project4/src/utils/tokenService.js":"7","/Users/atusanaseri/code/project4/src/components/ErrorMessage/ErrorMessage.jsx":"8","/Users/atusanaseri/code/project4/src/pages/Home/Home.jsx":"9","/Users/atusanaseri/code/project4/src/components/Header/Header.jsx":"10","/Users/atusanaseri/code/project4/src/pages/AddNotePage/AddNotePage.jsx":"11","/Users/atusanaseri/code/project4/src/components/AddNoteForm/AddNoteForm.jsx":"12","/Users/atusanaseri/code/project4/src/utils/notes-api.js":"13","/Users/atusanaseri/code/project4/src/pages/NoteListPage/NoteListPage.jsx":"14","/Users/atusanaseri/code/project4/src/components/NoteFeed/NoteFeed.jsx":"15","/Users/atusanaseri/code/project4/src/components/NoteFeedItem/NoteFeedItem.jsx":"16","/Users/atusanaseri/code/project4/src/pages/NoteDetailPage/NoteDetailPage.jsx":"17","/Users/atusanaseri/code/project4/src/components/NoteCardDetail/NoteCardDetail.jsx":"18","/Users/atusanaseri/code/project4/src/pages/EditNotePage/EditNotePage.jsx":"19","/Users/atusanaseri/code/project4/src/components/RemoveButton/RemoveButton.jsx":"20"},{"size":586,"mtime":1619199303952,"results":"21","hashOfConfig":"22"},{"size":5086,"mtime":1619199303956,"results":"23","hashOfConfig":"22"},{"size":2981,"mtime":1619757730045,"results":"24","hashOfConfig":"22"},{"size":1230,"mtime":1619199303956,"results":"25","hashOfConfig":"22"},{"size":3814,"mtime":1619906369940,"results":"26","hashOfConfig":"22"},{"size":2781,"mtime":1619914143634,"results":"27","hashOfConfig":"22"},{"size":977,"mtime":1619199303956,"results":"28","hashOfConfig":"22"},{"size":132,"mtime":1619199303928,"results":"29","hashOfConfig":"22"},{"size":832,"mtime":1620013534852,"results":"30","hashOfConfig":"22"},{"size":1304,"mtime":1620011560126,"results":"31","hashOfConfig":"22"},{"size":760,"mtime":1619931994450,"results":"32","hashOfConfig":"22"},{"size":2253,"mtime":1620011779373,"results":"33","hashOfConfig":"22"},{"size":1150,"mtime":1619758443954,"results":"34","hashOfConfig":"22"},{"size":1191,"mtime":1620011116832,"results":"35","hashOfConfig":"22"},{"size":592,"mtime":1620011295622,"results":"36","hashOfConfig":"22"},{"size":564,"mtime":1619993312667,"results":"37","hashOfConfig":"22"},{"size":1439,"mtime":1620011093674,"results":"38","hashOfConfig":"22"},{"size":801,"mtime":1619994855210,"results":"39","hashOfConfig":"22"},{"size":2611,"mtime":1620014928308,"results":"40","hashOfConfig":"22"},{"size":1031,"mtime":1619999013479,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"kmbati",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/atusanaseri/code/project4/src/index.js",[],["88","89"],"/Users/atusanaseri/code/project4/src/serviceWorker.js",[],"/Users/atusanaseri/code/project4/src/pages/App/App.jsx",[],"/Users/atusanaseri/code/project4/src/utils/userService.js",["90"],"import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\n\n// NOTE THIS IS configured to send of a multi/part form request\n// aka photo \nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\n\nexport default {\n  signup, \n  logout,\n  login,\n  getUser\n};","/Users/atusanaseri/code/project4/src/pages/SignupPage/SignupPage.jsx",["91","92"],"import React, { useState } from 'react';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport { Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react'\nimport userService from '../../utils/userService';\nimport { useHistory,Link } from 'react-router-dom';\n\n\n\nexport default function SignUpPage(props) {\n  const [invalidForm, setValidForm] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConf: \"\",\n  });\n\n  const history = useHistory();\n\n\n  function handleChange(e){\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n\n  async function handleSubmit(e){\n    // add this later\n    e.preventDefault();\n\n    // Photos have to be sent over as FormData\n    // They send over the form in multiparts (multipe requests to the server)\n\n    const formData = new FormData();\n    formData.append('photo', selectedFile);\n\n    // generating rest of form data by looping over the state object!\n    for (let key in state){\n      formData.append(key, state[key])\n    }\n    try {\n      await userService.signup(formData);\n      props.handleSignUpOrLogin() \n      history.push('/') \n\n    } catch(err){\n      console.log(err.message)\n      setError(err.message)\n    }\n  }\n\n  function handleFileInput(e){\n    setSelectedFile(e.target.files[0])\n  }\n \n\n  return (\n    <div className=\"bg-top-container \">\n    <Grid textAlign='center' style={{ height: '115vh' }} verticalAlign='middle'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='brown' textAlign='center'>\n          Organize your life with PLANIFY \n          </Header>            \n            <Form autoComplete=\"off\"  onSubmit={handleSubmit}>\n            <Segment stacked>               \n                <Form.Input                    \n                  name=\"username\"\n                  placeholder=\"username\"\n                  value={state.username}\n                  onChange={handleChange}\n                  required\n                />\n                <Form.Input\n                  type=\"email\"                  \n                  name=\"email\"\n                  placeholder=\"email\"\n                  value={ state.email}\n                  onChange={handleChange}\n                  required\n                />\n                <Form.Input             \n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"password\"\n                  value={ state.password}\n                  onChange={handleChange}\n                  required\n                />\n                <Form.Input     \n                  name=\"passwordConf\"\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={ state.passwordConf}\n                  onChange={handleChange}\n                  required\n                />\n                <Form.Field> \n                    <Form.Input\n                      type=\"file\"\n                      name=\"photo\"\n                      placeholder=\"upload image\"\n                      onChange={handleFileInput}\n                    />      \n                </Form.Field>\n                <Button\n                  type=\"submit\"\n                  className=\"btn\"\n                  disabled={invalidForm}\n                >\n                  <Button.Content style={{color: 'rgb(177,148,64)'}}>\n                  Signup\n                   </Button.Content>\n               \n              </Button>\n              <Link to=\"/login\">Cancel</Link>\n              </Segment>\n              {error ? <ErrorMessage error={error} /> : null}\n            </Form>\n           \n        </Grid.Column>\n      </Grid>\n    </div>\n  );   \n\n}\n","/Users/atusanaseri/code/project4/src/pages/LoginPage/LoginPage.jsx",["93","94"],"import React, { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\nimport './LoginPage.css';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\nimport userService from '../../utils/userService';\n\n\n\nexport default function LoginPage(props){\n\n    const [invalidForm, setValidForm] = useState(false);\n    const [error, setError ]          = useState('')\n    const [state, setState]       = useState({\n        email: '',\n        password: '',\n    })\n\n    const history = useHistory();\n\n    function handleChange(e){\n        setState({\n          ...state,\n          [e.target.name]: e.target.value\n        })\n      }\n    \n    async function handleSubmit(e){\n    e.preventDefault()\n            \n    try {\n        await userService.login(state);\n        // Route to wherever you want!\n        props.handleSignUpOrLogin()\n        history.push('/')\n        \n        } catch (err) {\n        // Invalid user data (probably duplicate email)\n        setError(err.message)\n        }\n    }\n\n      \n    \n\n    return (\n      <div className=\"bg-top-container\">\n          <Grid textAlign='center' style={{ height: '115vh'}} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as='h2' color='brown' textAlign='center'>\n             PLANIFY\n            </Header>\n            <Form  autoComplete=\"off\"  onSubmit={handleSubmit}>\n               <Segment stacked>\n                  <Form.Input\n                    type=\"email\"\n                   \n                    name=\"email\"\n                    placeholder=\"email\"\n                    value={ state.email}\n                    onChange={handleChange}\n                    required\n                  />\n                  <Form.Input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"password\"\n                    value={ state.password}\n                    onChange={handleChange}\n                    required\n                  />\n                <Button\n                  color='rgb(177,148,64)'\n                  fluid size='large'\n                  type=\"submit\"\n                  className=\"btn\"\n                  disabled={invalidForm}\n                >\n                   <Button.Content style={{color: 'rgb(177,148,64)'}}>\n                      Login\n                   </Button.Content>\n                  \n                </Button>\n              </Segment>\n            </Form>\n            <Message>\n              New to us? <Link to='/signup'>Sign Up</Link>\n            </Message>\n            {error ? <ErrorMessage error={error} /> : null}\n            </Grid.Column>\n          </Grid>\n        </div>\n      );\n}\n\n","/Users/atusanaseri/code/project4/src/utils/tokenService.js",["95"],"function setToken(token) {\n    if (token) {\n      // localStorage is given to us by the browser\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","/Users/atusanaseri/code/project4/src/components/ErrorMessage/ErrorMessage.jsx",[],"/Users/atusanaseri/code/project4/src/pages/Home/Home.jsx",["96","97"],"/Users/atusanaseri/code/project4/src/components/Header/Header.jsx",[],"/Users/atusanaseri/code/project4/src/pages/AddNotePage/AddNotePage.jsx",["98","99"],"import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport \"../../public/styles/styles.css\";\nimport PageHeader from \"../../components/Header/Header\";\nimport AddNoteForm from \"../../components/AddNoteForm/AddNoteForm\";\n\nexport default function AddNotePage({ user, handleLogout, handleAddNote }) {\n  return (\n    <div className=\"bg-wall\">\n      <Grid centered>\n        <Grid.Row>\n          <Grid.Column>\n            <PageHeader user={user} handleLogout={handleLogout} />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column style={{ maxWidth: 600 }}>\n            <AddNoteForm handleAddNote={handleAddNote} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n}\n","/Users/atusanaseri/code/project4/src/components/AddNoteForm/AddNoteForm.jsx",["100","101"],"/Users/atusanaseri/code/project4/src/utils/notes-api.js",[],"/Users/atusanaseri/code/project4/src/pages/NoteListPage/NoteListPage.jsx",[],"/Users/atusanaseri/code/project4/src/components/NoteFeed/NoteFeed.jsx",[],"/Users/atusanaseri/code/project4/src/components/NoteFeedItem/NoteFeedItem.jsx",["102"],"/Users/atusanaseri/code/project4/src/pages/NoteDetailPage/NoteDetailPage.jsx",["103","104","105"],"/Users/atusanaseri/code/project4/src/components/NoteCardDetail/NoteCardDetail.jsx",["106"],"/Users/atusanaseri/code/project4/src/pages/EditNotePage/EditNotePage.jsx",["107","108","109"],"/Users/atusanaseri/code/project4/src/components/RemoveButton/RemoveButton.jsx",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":49,"column":1,"nodeType":"116","endLine":54,"endColumn":3},{"ruleId":"117","severity":1,"message":"118","line":3,"column":38,"nodeType":"119","messageId":"120","endLine":3,"endColumn":43},{"ruleId":"117","severity":1,"message":"121","line":10,"column":23,"nodeType":"119","messageId":"120","endLine":10,"endColumn":35},{"ruleId":"117","severity":1,"message":"118","line":3,"column":38,"nodeType":"119","messageId":"120","endLine":3,"endColumn":43},{"ruleId":"117","severity":1,"message":"121","line":12,"column":25,"nodeType":"119","messageId":"120","endLine":12,"endColumn":37},{"ruleId":"114","severity":1,"message":"115","line":34,"column":3,"nodeType":"116","endLine":39,"endColumn":5},{"ruleId":"117","severity":1,"message":"122","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"123","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"122","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"123","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"124","line":4,"column":30,"nodeType":"119","messageId":"120","endLine":4,"endColumn":36},{"ruleId":"117","severity":1,"message":"118","line":4,"column":38,"nodeType":"119","messageId":"120","endLine":4,"endColumn":43},{"ruleId":"117","severity":1,"message":"118","line":2,"column":16,"nodeType":"119","messageId":"120","endLine":2,"endColumn":21},{"ruleId":"117","severity":1,"message":"122","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"123","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"125","line":4,"column":13,"nodeType":"119","messageId":"120","endLine":4,"endColumn":21},{"ruleId":"117","severity":1,"message":"126","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":14},{"ruleId":"117","severity":1,"message":"124","line":6,"column":30,"nodeType":"119","messageId":"120","endLine":6,"endColumn":36},{"ruleId":"117","severity":1,"message":"118","line":6,"column":38,"nodeType":"119","messageId":"120","endLine":6,"endColumn":43},{"ruleId":"117","severity":1,"message":"127","line":7,"column":8,"nodeType":"119","messageId":"120","endLine":7,"endColumn":18},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'setValidForm' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Header' is defined but never used.","'notesApi' is defined but never used.","'Card' is defined but never used.","'PageHeader' is defined but never used.","no-global-assign","no-unsafe-negation"]