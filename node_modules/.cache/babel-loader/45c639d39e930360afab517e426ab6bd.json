{"ast":null,"code":"var _jsxFileName = \"/Users/atusanaseri/code/project4/src/pages/LoginPage/LoginPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\nimport './LoginPage.css';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport userService from '../../utils/userService';\nimport test from '../../images/1.png';\nimport test1 from '../../images/2.ipeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage(props) {\n  _s();\n\n  const [invalidForm, setValidForm] = useState(false);\n  const [error, setError] = useState('');\n  const [state, setState] = useState({\n    email: '',\n    password: ''\n  });\n  const history = useHistory();\n\n  function handleChange(e) {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      await userService.login(state); // Route to wherever you want!\n\n      props.handleSignUpOrLogin();\n      history.push('/');\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      setError(err.message);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-top-container\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          as: \"h2\",\n          color: \"brown\",\n          textAlign: \"center\",\n          children: \"PLANIFY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          autoComplete: \"off\",\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            stacked: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"email\",\n              value: state.email,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              name: \"password\",\n              type: \"password\",\n              placeholder: \"password\",\n              value: state.password,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"rgb(177,148,64)\",\n              fluid: true,\n              size: \"large\",\n              type: \"submit\",\n              className: \"btn\",\n              disabled: invalidForm,\n              children: /*#__PURE__*/_jsxDEV(Button.Content, {\n                style: {\n                  color: 'rgb(177,148,64)'\n                },\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Message, {\n          children: [\"New to us? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 22\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}\n\n_s(LoginPage, \"UJIzi2N2Xpj54uJAdvMJhfB1ytw=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/atusanaseri/code/project4/src/pages/LoginPage/LoginPage.jsx"],"names":["React","useState","useHistory","Link","Button","Form","Grid","Header","Image","Message","Segment","ErrorMessage","userService","test","test1","LoginPage","props","invalidForm","setValidForm","error","setError","state","setState","email","password","history","handleChange","e","target","name","value","handleSubmit","preventDefault","login","handleSignUpOrLogin","push","err","message","height","maxWidth","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\nimport './LoginPage.css';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\nimport userService from '../../utils/userService';\nimport test from '../../images/1.png';\nimport test1 from '../../images/2.ipeg';\n\n\nexport default function LoginPage(props){\n\n    const [invalidForm, setValidForm] = useState(false);\n    const [error, setError ]          = useState('')\n    const [state, setState]       = useState({\n        email: '',\n        password: '',\n    })\n\n    const history = useHistory();\n\n    function handleChange(e){\n        setState({\n          ...state,\n          [e.target.name]: e.target.value\n        })\n      }\n    \n    async function handleSubmit(e){\n    e.preventDefault()\n            \n    try {\n        await userService.login(state);\n        // Route to wherever you want!\n        props.handleSignUpOrLogin()\n        history.push('/')\n        \n        } catch (err) {\n        // Invalid user data (probably duplicate email)\n        setError(err.message)\n        }\n    }\n\n      \n    \n\n    return (\n      <div className=\"bg-top-container\">\n          <Grid textAlign='center' style={{ height: '100vh'}} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as='h2' color='brown' textAlign='center'>\n             PLANIFY\n            </Header>\n            <Form  autoComplete=\"off\"  onSubmit={handleSubmit}>\n               <Segment stacked>\n                  <Form.Input\n                    type=\"email\"\n                   \n                    name=\"email\"\n                    placeholder=\"email\"\n                    value={ state.email}\n                    onChange={handleChange}\n                    required\n                  />\n                  <Form.Input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"password\"\n                    value={ state.password}\n                    onChange={handleChange}\n                    required\n                  />\n                <Button\n                  color='rgb(177,148,64)'\n                  fluid size='large'\n                  type=\"submit\"\n                  className=\"btn\"\n                  disabled={invalidForm}\n                >\n                   <Button.Content style={{color: 'rgb(177,148,64)'}}>\n                      Login\n                   </Button.Content>\n                  \n                </Button>\n              </Segment>\n            </Form>\n            <Message>\n              New to us? <Link to='/signup'>Sign Up</Link>\n            </Message>\n            {error ? <ErrorMessage error={error} /> : null}\n            </Grid.Column>\n          </Grid>\n        </div>\n      );\n}\n\n"]},"metadata":{},"sourceType":"module"}