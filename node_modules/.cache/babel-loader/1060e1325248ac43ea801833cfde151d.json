{"ast":null,"code":"var _jsxFileName = \"/Users/atusanaseri/code/project4/src/pages/EditNotePage/EditNotePage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport \"../../public/styles/styles.css\";\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\nimport \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\nimport { Button, Form, Grid, Header, Image, Segment } from \"semantic-ui-react\";\nimport PageHeader from \"../../components/Header/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditNotePage(props) {\n  _s();\n\n  const location = useLocation();\n  const data = location.state.note;\n  console.log(data, \"this is data coming\");\n  const [state, setState] = useState(data);\n  const [date, setDate] = useState(null);\n  let dateString = state.date;\n  const dateFullFormat = new Date(dateString);\n\n  function handleChange(e) {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleDateChange(event, data) {\n    console.log(data.value, \"this is data.value\");\n    let dateString = data.value;\n    setDate(dateString);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const payload = { ...state,\n      date\n    };\n    props.handleUpdateNote(payload);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-wall\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: \"75vh\"\n      },\n      verticalAlign: \"middle\",\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        style: {\n          maxWidth: 650\n        },\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            autoComplete: \"off\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              className: \"form-control\",\n              name: \"title\",\n              value: state.title,\n              placeholder: \"Title\",\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SemanticDatepicker, {\n              onChange: handleDateChange,\n              format: \"MM-DD-YYYY\",\n              value: dateFullFormat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              className: \"form-control\",\n              name: \"location\",\n              value: state.location,\n              placeholder: \"Location\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              className: \"form-control\",\n              name: \"description\",\n              value: state.description,\n              placeholder: \"Description\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"btn\",\n              color: \"brown\",\n              children: \"Update Note\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"notes/details\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditNotePage, \"2OAo9QCG3qZ8Pe1pjdAeQ4FaFRU=\", false, function () {\n  return [useLocation];\n});\n\n_c = EditNotePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditNotePage\");","map":{"version":3,"sources":["/Users/atusanaseri/code/project4/src/pages/EditNotePage/EditNotePage.jsx"],"names":["React","useState","useLocation","Link","SemanticDatepicker","Button","Form","Grid","Header","Image","Segment","PageHeader","EditNotePage","props","location","data","state","note","console","log","setState","date","setDate","dateString","dateFullFormat","Date","handleChange","e","target","name","value","handleDateChange","event","handleSubmit","preventDefault","payload","handleUpdateNote","height","maxWidth","title","description"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport \"../../public/styles/styles.css\";\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\nimport \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\nimport { Button, Form, Grid, Header, Image, Segment } from \"semantic-ui-react\";\nimport PageHeader from \"../../components/Header/Header\";\n\nexport default function EditNotePage(props) {\n  const location = useLocation();\n  const data = location.state.note;\n  console.log(data, \"this is data coming\");\n  const [state, setState] = useState(data);\n\n  const [date, setDate] = useState(null);\n\n  let dateString = state.date;\n  const dateFullFormat = new Date(dateString);\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  function handleDateChange(event, data) {\n    console.log(data.value, \"this is data.value\");\n    let dateString = data.value;\n    setDate(dateString);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const payload = {\n      ...state,\n      date,\n    };\n    props.handleUpdateNote(payload);\n  }\n\n  return (\n    <div className=\"bg-wall\">\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"75vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 650 }}>\n          <Segment>\n            <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n              <Form.Input\n                className=\"form-control\"\n                name=\"title\"\n                value={state.title}\n                placeholder=\"Title\"\n                onChange={handleChange}\n                required\n              />\n\n              <SemanticDatepicker\n                onChange={handleDateChange}\n                format='MM-DD-YYYY'\n                value={dateFullFormat}\n              />\n              <Form.Input\n                className=\"form-control\"\n                name=\"location\"\n                value={state.location}\n                placeholder=\"Location\"\n                onChange={handleChange}\n              />\n              <Form.Input\n                className=\"form-control\"\n                name=\"description\"\n                value={state.description}\n                placeholder=\"Description\"\n                onChange={handleChange}\n              />\n              <Button type=\"submit\" className=\"btn\" color='brown'>\n                Update Note\n              </Button>\n              <Link to=\"notes/details\">Cancel</Link>\n            </Form>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}