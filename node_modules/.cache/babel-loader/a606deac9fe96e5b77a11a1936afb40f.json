{"ast":null,"code":"var _jsxFileName = \"/Users/atusanaseri/code/project4/src/pages/LoginPage/LoginPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './LoginPage.css';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport userService from '../../utils/userService';\nimport { useHistory, Link } from 'react-router-dom';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage(props) {\n  _s();\n\n  const [invalidForm, setValidForm] = useState(false);\n  const [error, setError] = useState('');\n  const [state, setState] = useState({\n    email: '',\n    password: ''\n  });\n  const history = useHistory();\n\n  function handleChange(e) {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      await userService.login(state); // Route to wherever you want!\n\n      props.handleSignUpOrLogin();\n      history.push('/');\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      setError(err.message);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"setup signup PAGE\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 14\n  }, this);\n}\n\n_s(LoginPage, \"UJIzi2N2Xpj54uJAdvMJhfB1ytw=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/atusanaseri/code/project4/src/pages/LoginPage/LoginPage.jsx"],"names":["React","useState","ErrorMessage","userService","useHistory","Link","Button","Form","Grid","Header","Image","Message","Segment","LoginPage","props","invalidForm","setValidForm","error","setError","state","setState","email","password","history","handleChange","e","target","name","value","handleSubmit","preventDefault","login","handleSignUpOrLogin","push","err","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,KAArC,EAA4CC,OAA5C,EAAqDC,OAArD,QAAoE,mBAApE;;AAIA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAAA;;AAEpC,QAAM,CAACC,WAAD,EAAcC,YAAd,IAA8Bf,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAA0BnB,QAAQ,CAAC;AACrCoB,IAAAA,KAAK,EAAE,EAD8B;AAErCC,IAAAA,QAAQ,EAAE;AAF2B,GAAD,CAAxC;AAKA,QAAMC,OAAO,GAAGnB,UAAU,EAA1B;;AAEA,WAASoB,YAAT,CAAsBC,CAAtB,EAAwB;AACpBL,IAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEP,OAACM,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFnB,KAAD,CAAR;AAID;;AAEH,iBAAeC,YAAf,CAA4BJ,CAA5B,EAA8B;AAC9BA,IAAAA,CAAC,CAACK,cAAF;;AAEA,QAAI;AACA,YAAM3B,WAAW,CAAC4B,KAAZ,CAAkBZ,KAAlB,CAAN,CADA,CAEA;;AACAL,MAAAA,KAAK,CAACkB,mBAAN;AACAT,MAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AAEC,KANL,CAMM,OAAOC,GAAP,EAAY;AACd;AACAhB,MAAAA,QAAQ,CAACgB,GAAG,CAACC,OAAL,CAAR;AACC;AACJ;;AAKD,sBAGS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHT;AAOH;;GA3CuBtB,S;UASJT,U;;;KATIS,S","sourcesContent":["import React, { useState } from 'react';\nimport './LoginPage.css';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\nimport userService from '../../utils/userService';\nimport { useHistory, Link } from 'react-router-dom';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\n\n\n\nexport default function LoginPage(props){\n\n    const [invalidForm, setValidForm] = useState(false);\n    const [error, setError ]          = useState('')\n    const [state, setState]       = useState({\n        email: '',\n        password: '',\n    })\n\n    const history = useHistory();\n\n    function handleChange(e){\n        setState({\n          ...state,\n          [e.target.name]: e.target.value\n        })\n      }\n    \n    async function handleSubmit(e){\n    e.preventDefault()\n            \n    try {\n        await userService.login(state);\n        // Route to wherever you want!\n        props.handleSignUpOrLogin()\n        history.push('/')\n        \n        } catch (err) {\n        // Invalid user data (probably duplicate email)\n        setError(err.message)\n        }\n    }\n\n      \n    \n\n    return (\n      \n          \n             <h1>setup signup PAGE</h1>\n    \n      \n      );\n}\n\n"]},"metadata":{},"sourceType":"module"}