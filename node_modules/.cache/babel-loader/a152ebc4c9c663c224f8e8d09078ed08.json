{"ast":null,"code":"var _jsxFileName = \"/Users/atusanaseri/code/project4/src/pages/EditNotePage/EditNotePage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport \"../../public/styles/styles.css\";\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\nimport \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\nimport { Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react';\nimport PageHeader from '../../components/Header/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditNotePage(props) {\n  _s();\n\n  const location = useLocation();\n  const data = location.state.note;\n  console.log(data, 'this is data coming');\n  const [state, setState] = useState(data);\n  const [date, setDate] = useState(null);\n  let dateString = state.date;\n  const date1 = new Date(dateString); // dateString = new Date(dateString).toUTCString();\n  // dateString = dateString.split(' ').slice(0, 4).join(' ');\n  // console.log(date1,'this is state.date');\n\n  function handleChange(e) {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleDateChange(event, data) {\n    console.log(data.value, 'this is data.value'); // let dateString = data.value;\n    // dateString = new Date(dateString).toUTCString();\n    // dateString = dateString.split(' ').slice(0, 4).join(' ');\n    // console.log(dateString);\n\n    setDate(dateString);\n  } // function handleSubmit(e){\n  //     console.log(state,'handle submit to send new state')\n  //     e.preventDefault()\n  //     console.log('handleSubmit fired')\n  //     props.handleUpdateNote(state);\n  // }\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const payload = { ...state,\n      date\n    };\n    props.handleUpdateNote(payload);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-wall\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '75vh'\n      },\n      verticalAlign: \"middle\",\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        style: {\n          maxWidth: 650\n        },\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            autoComplete: \"off\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              className: \"form-control\",\n              name: \"title\",\n              value: state.title,\n              placeholder: \"Title\",\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SemanticDatepicker, {\n              onChange: handleDateChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              className: \"form-control\",\n              name: \"location\",\n              value: state.location,\n              placeholder: \"Location\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              className: \"form-control\",\n              name: \"description\",\n              value: state.description,\n              placeholder: \"Description\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"btn\",\n              children: \"Update Note\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EditNotePage, \"2OAo9QCG3qZ8Pe1pjdAeQ4FaFRU=\", false, function () {\n  return [useLocation];\n});\n\n_c = EditNotePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditNotePage\");","map":{"version":3,"sources":["/Users/atusanaseri/code/project4/src/pages/EditNotePage/EditNotePage.jsx"],"names":["React","useState","useLocation","SemanticDatepicker","Button","Form","Grid","Header","Image","Segment","PageHeader","EditNotePage","props","location","data","state","note","console","log","setState","date","setDate","dateString","date1","Date","handleChange","e","target","name","value","handleDateChange","event","handleSubmit","preventDefault","payload","handleUpdateNote","height","maxWidth","title","description"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport {useLocation} from 'react-router-dom';\nimport \"../../public/styles/styles.css\";\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\nimport \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\nimport {Button, Form, Grid, Header, Image,  Segment } from 'semantic-ui-react';\nimport PageHeader from '../../components/Header/Header';\n\nexport default function EditNotePage(props){\n    const location = useLocation();\n    const data = location.state.note;\n    console.log(data,'this is data coming');\n    const [state, setState] = useState(data);\n\n    const [date, setDate] = useState(null);\n\n    let dateString = state.date;\n    const date1 = new Date(dateString);\n    // dateString = new Date(dateString).toUTCString();\n    // dateString = dateString.split(' ').slice(0, 4).join(' ');\n    // console.log(date1,'this is state.date');\n    \n\n    function handleChange(e){\n        setState({\n          ...state,\n          [e.target.name]: e.target.value\n        })\n      }\n      \n    function handleDateChange(event, data) {\n      console.log(data.value, 'this is data.value')\n      // let dateString = data.value;\n      // dateString = new Date(dateString).toUTCString();\n      // dateString = dateString.split(' ').slice(0, 4).join(' ');\n      // console.log(dateString);\n      setDate(dateString);\n    }\n\n      // function handleSubmit(e){\n      //     console.log(state,'handle submit to send new state')\n      //     e.preventDefault()\n      //     console.log('handleSubmit fired')\n      //     props.handleUpdateNote(state);\n\n      // }\n\n      function handleSubmit(e) {\n   \n        e.preventDefault();\n        const payload = {\n          ...state,\n          date,\n        };\n        props.handleUpdateNote(payload);\n      }\n\n    \n    return(\n      <div className=\"bg-wall\">\n        \n        <Grid textAlign='center' style={{ height: '75vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 650 }}>\n        <Segment>\n            <Form  autoComplete=\"off\" onSubmit={handleSubmit}>\n              <Form.Input\n                  className=\"form-control\"\n                  name=\"title\"\n                  value={state.title}\n                  placeholder=\"Title\"\n                  onChange={handleChange}\n                  required\n              />   \n              {/* <Form.Input\n                  className=\"form-control\"\n                  name=\"date\"\n                  value={state.date}\n                  placeholder=\"When\"\n                  onChange={handleChange} \n              />    */}\n               <SemanticDatepicker onChange={handleDateChange}/>\n              <Form.Input\n                  className=\"form-control\"\n                  name=\"location\"\n                  value={state.location}\n                  placeholder=\"Location\"\n                  onChange={handleChange} \n              />   \n              <Form.Input\n                  className=\"form-control\"\n                  name=\"description\"\n                  value={state.description}\n                  placeholder=\"Description\"\n                  onChange={handleChange}\n              />   \n              <Button\n                type=\"submit\"\n                className=\"btn\"\n              >\n                Update Note\n              </Button>\n            </Form>\n          </Segment>\n      </Grid.Column>\n    </Grid>\n    </div>\n  ); \n}"]},"metadata":{},"sourceType":"module"}