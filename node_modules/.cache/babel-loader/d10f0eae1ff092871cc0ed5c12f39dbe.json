{"ast":null,"code":"var _jsxFileName = \"/Users/atusanaseri/code/project4/src/pages/SignupPage/SignupPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport { Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react';\nimport userService from '../../utils/userService';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignUpPage(props) {\n  _s();\n\n  const [invalidForm, setValidForm] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConf: \"\"\n  });\n  const history = useHistory();\n\n  function handleChange(e) {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async function handleSubmit(e) {\n    // add this later\n    e.preventDefault(); // Photos have to be sent over as FormData\n    // They send over the form in multiparts (multipe requests to the server)\n\n    const formData = new FormData();\n    formData.append('photo', selectedFile); // generating rest of form data by looping over the state object!\n\n    for (let key in state) {\n      formData.append(key, state[key]);\n    }\n\n    try {\n      await userService.signup(formData);\n      props.handleSignUpOrLogin();\n      history.push('/');\n    } catch (err) {\n      console.log(err.message);\n      setError(err.message);\n    }\n  }\n\n  function handleFileInput(e) {\n    setSelectedFile(e.target.files[0]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          as: \"h2\",\n          color: \"teal\",\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: \"https://i.imgur.com/s4LrnlU.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), \" Sign Up\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          autoComplete: \"off\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Segment, {\n            stacked: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              name: \"username\",\n              placeholder: \"username\",\n              value: state.username,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"email\",\n              value: state.email,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              name: \"password\",\n              type: \"password\",\n              placeholder: \"password\",\n              value: state.password,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              name: \"passwordConf\",\n              type: \"password\",\n              placeholder: \"Confirm Password\",\n              value: state.passwordConf,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.TextArea, {\n              label: \"bio\",\n              placeholder: \"Tell us more about your dogs...\",\n              name: \"bio\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Form.Input, {\n                type: \"file\",\n                name: \"photo\",\n                placeholder: \"upload image\",\n                onChange: handleFileInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"btn\",\n              disabled: invalidForm,\n              children: \"Signup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            error: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 24\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(SignUpPage, \"UJEfHd1o6WD8WSF9hNhC9A9XUIU=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUpPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"sources":["/Users/atusanaseri/code/project4/src/pages/SignupPage/SignupPage.jsx"],"names":["React","useState","ErrorMessage","Button","Form","Grid","Header","Image","Segment","userService","useHistory","SignUpPage","props","invalidForm","setValidForm","error","setError","selectedFile","setSelectedFile","state","setState","username","email","password","passwordConf","history","handleChange","e","target","name","value","handleSubmit","preventDefault","formData","FormData","append","key","signup","handleSignUpOrLogin","push","err","console","log","message","handleFileInput","files","height","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport { Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react'\nimport userService from '../../utils/userService';\nimport { useHistory } from 'react-router-dom';\n\n\n\nexport default function SignUpPage(props) {\n  const [invalidForm, setValidForm] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConf: \"\",\n  });\n\n  const history = useHistory();\n\n\n  function handleChange(e){\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n\n  async function handleSubmit(e){\n    // add this later\n    e.preventDefault();\n\n    // Photos have to be sent over as FormData\n    // They send over the form in multiparts (multipe requests to the server)\n\n    const formData = new FormData();\n    formData.append('photo', selectedFile);\n\n    // generating rest of form data by looping over the state object!\n    for (let key in state){\n      formData.append(key, state[key])\n    }\n    try {\n      await userService.signup(formData);\n      props.handleSignUpOrLogin() \n      history.push('/') \n\n    } catch(err){\n      console.log(err.message)\n      setError(err.message)\n    }\n  }\n\n  function handleFileInput(e){\n    setSelectedFile(e.target.files[0])\n  }\n \n\n  return (\n    <>\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            <Image src='https://i.imgur.com/s4LrnlU.png' /> Sign Up    \n          </Header>            \n            <Form autoComplete=\"off\"  onSubmit={handleSubmit}>\n            <Segment stacked>               \n                <Form.Input                    \n                  name=\"username\"\n                  placeholder=\"username\"\n                  value={state.username}\n                  onChange={handleChange}\n                  required\n                />\n                <Form.Input\n                  type=\"email\"                  \n                  name=\"email\"\n                  placeholder=\"email\"\n                  value={ state.email}\n                  onChange={handleChange}\n                  required\n                />\n                <Form.Input             \n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"password\"\n                  value={ state.password}\n                  onChange={handleChange}\n                  required\n                />\n                <Form.Input     \n                  name=\"passwordConf\"\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={ state.passwordConf}\n                  onChange={handleChange}\n                  required\n                />\n                <Form.TextArea label='bio' placeholder='Tell us more about your dogs...' name=\"bio\" onChange={handleChange}/>\n                <Form.Field> \n                    <Form.Input\n                      type=\"file\"\n                      name=\"photo\"\n                      placeholder=\"upload image\"\n                      onChange={handleFileInput}\n                    />      \n                </Form.Field>\n                <Button\n                  type=\"submit\"\n                  className=\"btn\"\n                  disabled={invalidForm}\n                >\n                Signup\n              </Button>\n              </Segment>\n              {error ? <ErrorMessage error={error} /> : null}\n            </Form>\n           \n        </Grid.Column>\n      </Grid>\n    </>\n  );   \n\n}\n"]},"metadata":{},"sourceType":"module"}