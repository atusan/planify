{"ast":null,"code":"import tokenService from './tokenService';\nconst BASE_URL = '/api/users/'; // NOTE THIS IS configured to send of a multi/part form request\n// aka photo \n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user\n  }).then(res => {\n    if (res.ok) return res.json(); // Probably a duplicate email\n\n    throw new Error('Email already taken!');\n  }) // Parameter destructuring!\n  .then(({\n    token\n  }) => tokenService.setToken(token)); // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    }),\n    body: JSON.stringify(creds)\n  }).then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  }).then(({\n    token\n  }) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  logout,\n  login,\n  getUser\n};","map":{"version":3,"sources":["/Users/atusanaseri/code/project4/src/utils/userService.js"],"names":["tokenService","BASE_URL","signup","user","fetch","method","body","then","res","ok","json","Error","token","setToken","getUser","getUserFromToken","logout","removeToken","login","creds","headers","Headers","JSON","stringify"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,QAAQ,GAAG,aAAjB,C,CAGA;AACA;;AACA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,SAAOC,KAAK,CAACH,QAAQ,GAAG,QAAZ,EAAsB;AAChCI,IAAAA,MAAM,EAAE,MADwB;AAEhCC,IAAAA,IAAI,EAAEH;AAF0B,GAAtB,CAAL,CAINI,IAJM,CAIDC,GAAG,IAAI;AACX,QAAIA,GAAG,CAACC,EAAR,EAAY,OAAOD,GAAG,CAACE,IAAJ,EAAP,CADD,CAEX;;AACA,UAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD,GARM,EASP;AATO,GAUNJ,IAVM,CAUD,CAAC;AAACK,IAAAA;AAAD,GAAD,KAAaZ,YAAY,CAACa,QAAb,CAAsBD,KAAtB,CAVZ,CAAP,CADoB,CAYpB;AACA;AACA;AACA;AACD;;AAED,SAASE,OAAT,GAAmB;AACjB,SAAOd,YAAY,CAACe,gBAAb,EAAP;AACD;;AAED,SAASC,MAAT,GAAkB;AAChBhB,EAAAA,YAAY,CAACiB,WAAb;AACD;;AAED,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,SAAOf,KAAK,CAACH,QAAQ,GAAG,OAAZ,EAAqB;AAC/BI,IAAAA,MAAM,EAAE,MADuB;AAE/Be,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAAC,sBAAgB;AAAjB,KAAZ,CAFsB;AAG/Bf,IAAAA,IAAI,EAAEgB,IAAI,CAACC,SAAL,CAAeJ,KAAf;AAHyB,GAArB,CAAL,CAKNZ,IALM,CAKDC,GAAG,IAAI;AACX;AACA,QAAIA,GAAG,CAACC,EAAR,EAAY,OAAOD,GAAG,CAACE,IAAJ,EAAP;AACZ,UAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN;AACD,GATM,EAUNJ,IAVM,CAUD,CAAC;AAACK,IAAAA;AAAD,GAAD,KAAaZ,YAAY,CAACa,QAAb,CAAsBD,KAAtB,CAVZ,CAAP;AAWD;;AAGD,eAAe;AACbV,EAAAA,MADa;AAEbc,EAAAA,MAFa;AAGbE,EAAAA,KAHa;AAIbJ,EAAAA;AAJa,CAAf","sourcesContent":["import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\n\n// NOTE THIS IS configured to send of a multi/part form request\n// aka photo \nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\n\nexport default {\n  signup, \n  logout,\n  login,\n  getUser\n};"]},"metadata":{},"sourceType":"module"}