{"ast":null,"code":"import tokenService from './tokenService';\nconst BASE_URL = '/api/notes';\nexport function create(note) {\n  console.log(note, 'in create');\n  return fetch(BASE_URL, {\n    method: 'POST',\n    body: JSON.stringify(note),\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken(),\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json());\n}\nexport function getAll() {\n  return fetch(BASE_URL, {\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    }\n  }).then(res => res.json());\n}\nexport function update(note) {\n  console.log(note, 'in update');\n  return fetch(`${BASE_URL}/edit/${note._id}`, {\n    method: 'PUT',\n    body: JSON.stringify(note),\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken(),\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    console.log(\"THIS IS RES: \", res);\n    return res.json();\n  });\n}","map":{"version":3,"sources":["/Users/atusanaseri/code/project4/src/utils/notes-api.js"],"names":["tokenService","BASE_URL","create","note","console","log","fetch","method","body","JSON","stringify","headers","getToken","then","res","json","getAll","update","_id"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,QAAQ,GAAG,YAAjB;AAEA,OAAO,SAASC,MAAT,CAAgBC,IAAhB,EAAqB;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,WAAlB;AACA,SAAOG,KAAK,CAACL,QAAD,EAAW;AACrBM,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAFe;AAGrBQ,IAAAA,OAAO,EAAE;AACP,uBAAiB,YAAYX,YAAY,CAACY,QAAb,EADtB;AAEP,sBAAgB;AAFT;AAHY,GAAX,CAAL,CAOJC,IAPI,CAOCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPR,CAAP;AAQD;AAED,OAAO,SAASC,MAAT,GAAkB;AACvB,SAAOV,KAAK,CAACL,QAAD,EAAW;AACrBU,IAAAA,OAAO,EAAE;AACP,uBAAiB,YAAYX,YAAY,CAACY,QAAb;AADtB;AADY,GAAX,CAAL,CAKNC,IALM,CAKDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALN,CAAP;AAMD;AAED,OAAO,SAASE,MAAT,CAAgBd,IAAhB,EAAqB;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,WAAlB;AACA,SAAOG,KAAK,CAAE,GAAEL,QAAS,SAAQE,IAAI,CAACe,GAAI,EAA9B,EAAiC;AAC3CX,IAAAA,MAAM,EAAE,KADmC;AAE3CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAFqC;AAG3CQ,IAAAA,OAAO,EAAE;AACP,uBAAiB,YAAYX,YAAY,CAACY,QAAb,EADtB;AAEP,sBAAgB;AAFT;AAHkC,GAAjC,CAAL,CAOJC,IAPI,CAOCC,GAAG,IAAG;AACXV,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BS,GAA7B;AACA,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACF,GAVM,CAAP;AAWD","sourcesContent":["import tokenService from './tokenService';\n\nconst BASE_URL = '/api/notes';\n\nexport function create(note){\n  console.log(note, 'in create')\n  return fetch(BASE_URL, {\n    method: 'POST',\n    body: JSON.stringify(note),\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken(),\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json())\n}\n\nexport function getAll() {\n  return fetch(BASE_URL, {\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    }\n  })\n  .then(res => res.json());\n}\n\nexport function update(note){\n  console.log(note, 'in update')\n  return fetch(`${BASE_URL}/edit/${note._id}`, {\n    method: 'PUT',\n    body: JSON.stringify(note),\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken(),\n      'Content-Type': 'application/json'\n    }\n  }).then(res =>{ \n     console.log(\"THIS IS RES: \", res)\n     return res.json()\n  })\n}"]},"metadata":{},"sourceType":"module"}